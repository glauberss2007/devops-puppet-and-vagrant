# Install the vagrant-aws plugin
# vagrant plugin install vagrant-aws

# Add the dummy box for AWS provider
# vagrant box add --force dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box

# Bring up the AWS environment
# vagrant up aws_web --provider=aws

# Destroy the AWS environment
# vagrant destroy -f aws_web

Vagrant.configure("2") do |config|
  config.vm.provider "aws"
  
  config.vm.provider :aws do |aws, override|
    # Access key data
    aws.access_key_id = "your_access_key"
    aws.secret_access_key = "your_secret_key"
    aws.ami = "ami-0ac019f4fcb7cb7e6"# AMI identification, here it is Ubuntu 18.04
    aws.security_groups = ['devops-vagrant']# Security group name
    aws.keypair_name = "key-devops-vagrant"# PEM file name
    
    override.ssh.username = "ubuntu"# User name, for Ubuntu it is 'ubuntu'
    override.ssh.private_key_path = "key-devops-vagrant.pem"# Path and name of the PEM file
  end

  # New environment aws_web, now with Puppet
  config.vm.define :aws_web do |aws_web_config|

    aws_web_config.vm.box = "dummy"
    aws_web_config.vm.synced_folder '.', '/vagrant', type: "rsync"
    aws_web_config.vm.provider :aws do |aws|
      aws.tags = { 'Name' => 'MusicJungle (vagrant)' }
    end

    # Shell and Puppet provisioners
    aws_web_config.vm.provision "shell", path: "manifests/bootstrap.sh"
    aws_web_config.vm.provision "puppet" do |puppet|
      puppet.manifest_file = "web.pp"
      puppet.synced_folder_type = 'rsync'
    end
  end
end
